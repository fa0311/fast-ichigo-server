/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DetectionExt } from './DetectionExt';
import {
    DetectionExtFromJSON,
    DetectionExtFromJSONTyped,
    DetectionExtToJSON,
    DetectionExtToJSONTyped,
} from './DetectionExt';

/**
 * 
 * @export
 * @interface DetectionResult
 */
export interface DetectionResult {
    /**
     * 
     * @type {Array<DetectionExt>}
     * @memberof DetectionResult
     */
    detections: Array<DetectionExt>;
    /**
     * 
     * @type {string}
     * @memberof DetectionResult
     */
    base64: string;
    /**
     * 
     * @type {number}
     * @memberof DetectionResult
     */
    time: number;
}

/**
 * Check if a given object implements the DetectionResult interface.
 */
export function instanceOfDetectionResult(value: object): value is DetectionResult {
    if (!('detections' in value) || value['detections'] === undefined) return false;
    if (!('base64' in value) || value['base64'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    return true;
}

export function DetectionResultFromJSON(json: any): DetectionResult {
    return DetectionResultFromJSONTyped(json, false);
}

export function DetectionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetectionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'detections': ((json['detections'] as Array<any>).map(DetectionExtFromJSON)),
        'base64': json['base64'],
        'time': json['time'],
    };
}

export function DetectionResultToJSON(json: any): DetectionResult {
    return DetectionResultToJSONTyped(json, false);
}

export function DetectionResultToJSONTyped(value?: DetectionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'detections': ((value['detections'] as Array<any>).map(DetectionExtToJSON)),
        'base64': value['base64'],
        'time': value['time'],
    };
}

